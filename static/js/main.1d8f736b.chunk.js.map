{"version":3,"sources":["assets/alert.wav","components/alert/index.tsx","assets/close.svg","components/users/index.tsx","components/avatar/index.tsx","components/button/index.tsx","components/message/index.tsx","components/text-field/index.tsx","assets/send.svg","assets/send-dark.svg","components/messages/index.tsx","assets/sun.svg","assets/moon.svg","views/chat/index.tsx","views/join/index.tsx","util/index.ts","app/index.tsx","reportWebVitals.ts","index.tsx"],"names":["resetTimeout","Alert","show","message","timeout","onChange","useEffect","clearTimeout","setTimeout","className","onClick","src","close","alt","Users","users","map","id","name","altBg","title","Avatar","trim","initial","first","second","toUpperCase","initials","Button","children","block","event","Message","text","timestamp","user","isCurrentUser","toLowerCase","style","width","date","Date","normalizeDigit","digit","getHours","getMinutes","time","TextField","type","value","placeholder","icon","onIconClick","onKeyPress","handler","func","key","target","Messages","dark","onSend","messages","setMessage","messagesRef","useRef","useLayoutEffect","current","elem","scrollTop","scrollHeight","ref","index","sendDarkIcon","sendIcon","Chat","room","onTheme","sun","moon","window","location","reload","Join","onJoin","useState","setName","setRoom","height","lightCSSVariables","darkCSSVariables","overrideThemeVariables","themeObject","root","document","querySelector","themeVariables","Object","keys","forEach","themeVar","element","variable","varValue","startsWith","setProperty","String","alert","require","audio","Audio","default","socket","io","transports","App","setUsers","setMessages","setDark","joined","setJoined","showAlert","setShowAlert","alertMessage","setAlertMessage","on","play","error","devMessage","console","reset","handleTheme","localStorage","getItem","setItem","trace","preventDefault","valueOf","emit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1d8f736b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/alert.439ffe7a.wav\";","import { useEffect } from 'react';\n\nimport './styles.css';\nimport close from '../../assets/close.svg';\n\nlet resetTimeout: any;\nconst Alert = ({ show, message, timeout = 2500, onChange }: any) => {\n  useEffect(() => {\n    if (show) {\n      clearTimeout(resetTimeout);\n      resetTimeout = setTimeout(() => {\n        onChange && onChange(false);\n      }, timeout);\n    }\n  }, [show, timeout, onChange]);\n\n  return (\n    <div className={`alert alert--${show ? 'active' : 'inactive'}`}>\n      <div className=\"alert__message\">{message}</div>\n      <div className=\"alert__icon\" onClick={() => onChange && onChange(false)}>\n        <img className=\"close__icon\" src={close} alt=\"close\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Alert;\n","export default __webpack_public_path__ + \"static/media/close.dc95cfa2.svg\";","import { Avatar } from '..';\nimport './styles.css';\n\nconst Users = ({ users }: any) => {\n  return (\n    <div className=\"users__wrapper\">\n      <div className=\"users__heading\">Users</div>\n      {users.map(({ id, name }: any) => (\n        <div key={id} className=\"user__wrapper\">\n          <Avatar altBg name={name} />\n          <div title={name} className=\"user__name\">\n            {name}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Users;\n","import './styles.css';\n\nconst Avatar = ({ name, altBg = false }: any) => {\n  const initials = () => {\n    let initial = '';\n\n    if (name) {\n      const first = name[0];\n      const second = name[1];\n\n      if (first) {\n        initial += first;\n      }\n\n      if (second) {\n        initial += second;\n      }\n    }\n\n    return initial.toUpperCase();\n  };\n\n  return (\n    <div title={name} className={`avatar ${altBg ? 'avatar--bg' : ''}`.trim()}>\n      {initials()}\n    </div>\n  );\n};\n\nexport default Avatar;\n","import './styles.css';\n\nconst Button = ({ children, block = false, onClick }: any) => {\n  return (\n    <button\n      onClick={event => onClick && onClick(event)}\n      className={`button ${block ? 'button--block' : ''}`.trim()}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import Avatar from '../avatar';\n\nimport './styles.css';\n\nconst Message = ({ name, text, timestamp, user }: any) => {\n  const isCurrentUser = () => user.toLowerCase() === name.toLowerCase();\n\n  const isBot = () => user === 'bot';\n\n  const time = () => {\n    const date = new Date(timestamp);\n\n    const normalizeDigit = (digit: number) =>\n      `${digit < 10 ? '0' : ''}${digit}`;\n\n    return `${normalizeDigit(date.getHours())}:${normalizeDigit(\n      date.getMinutes(),\n    )}`;\n  };\n\n  return (\n    <div\n      className={`message__wrapper ${\n        isCurrentUser() ? 'message__wrapper--right' : ''\n      }`.trim()}\n    >\n      {isBot() ? (\n        <div className=\"message__bot\">{text}</div>\n      ) : (\n        <>\n          {!isCurrentUser() && (\n            <>\n              <Avatar name={user} />\n              <div style={{ width: '8px' }}></div>\n            </>\n          )}\n          <div\n            className={`message__container ${\n              isCurrentUser() ? 'message__container--right' : ''\n            }`.trim()}\n          >\n            <div className=\"message__text\">{text}</div>\n            <div\n              className={`message__timestamp ${\n                isCurrentUser() ? 'message__timestamp--right' : ''\n              }`.trim()}\n            >\n              {time()}\n            </div>\n          </div>\n          {isCurrentUser() && (\n            <>\n              <div style={{ width: '8px' }}></div>\n              <Avatar name={user} />\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Message;\n","import './styles.css';\n\nconst TextField = ({\n  className = '',\n  type,\n  value,\n  placeholder,\n  icon = false,\n  onIconClick,\n  onKeyPress,\n  onChange,\n}: any) => {\n  const handler = (func: Function, value: any) => {\n    if (func) {\n      func(value);\n    }\n  };\n\n  return (\n    <div className={`input__wrapper ${className}`.trim()}>\n      <input\n        type={type}\n        value={value}\n        placeholder={placeholder}\n        onKeyPress={event => handler(onKeyPress, event.key)}\n        onChange={({ target: { value } }) => handler(onChange, value)}\n        className={`input ${icon ? 'input--shrunk' : ''}`.trim()}\n      />\n      {icon && (\n        <div\n          className=\"input__send\"\n          onClick={event => handler(onIconClick, event)}\n        >\n          <img className=\"send_icon\" src={icon} alt=\"send\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TextField;\n","export default __webpack_public_path__ + \"static/media/send.623ea14f.svg\";","export default __webpack_public_path__ + \"static/media/send-dark.2eaae009.svg\";","import { useLayoutEffect, useRef } from 'react';\n\nimport TextField from '../text-field';\nimport Message from '../message';\n\nimport './styles.css';\n\nimport sendIcon from '../../assets/send.svg';\nimport sendDarkIcon from '../../assets/send-dark.svg';\n\nconst Messages = ({\n  name,\n  dark,\n  onSend,\n  message,\n  messages,\n  setMessage,\n}: any) => {\n  const messagesRef: any = useRef(null);\n\n  useLayoutEffect(() => {\n    if (messagesRef.current) {\n      const elem: any = messagesRef.current;\n      elem.scrollTop = elem.scrollHeight;\n    }\n  }, [messages]);\n\n  return (\n    <div className=\"messages__wrapper\">\n      <div ref={messagesRef} className=\"messages__container\">\n        {messages.map(({ text, timestamp, user }: any, index: number) => (\n          <Message\n            key={index}\n            user={user}\n            text={text}\n            name={name}\n            timestamp={timestamp}\n          />\n        ))}\n        {/* {JSON.stringify(messages.reverse())} */}\n      </div>\n      <TextField\n        value={message}\n        onIconClick={() => onSend()}\n        placeholder=\"Type a message here...\"\n        icon={dark ? sendDarkIcon : sendIcon}\n        onChange={(value: string) => setMessage(value)}\n        onKeyPress={(key: string) => (key === 'Enter' ? onSend() : null)}\n      />\n    </div>\n  );\n};\n\nexport default Messages;\n","export default __webpack_public_path__ + \"static/media/sun.81a752cc.svg\";","export default __webpack_public_path__ + \"static/media/moon.84c0949c.svg\";","import { Button, Messages, Users } from '../../components';\n\nimport './styles.css';\nimport sun from '../../assets/sun.svg';\nimport moon from '../../assets/moon.svg';\n\nconst Chat = ({\n  dark,\n  name,\n  room,\n  users,\n  message,\n  messages,\n  setMessage,\n  onTheme,\n  onSend,\n}: any) => {\n  return (\n    <div className=\"chat__wrapper\">\n      <div className=\"chat__container\">\n        <div className=\"chat__header\">\n          <div title={room} className=\"chat__name\">\n            {room}\n          </div>\n          <div className=\"chat__actions\">\n            <div\n              className=\"chat__theme\"\n              onClick={() => onTheme && onTheme(!dark)}\n            >\n              <img src={dark ? sun : moon} alt=\"theme\" />\n            </div>\n            <Button onClick={() => window.location.reload()}>LEAVE</Button>\n          </div>\n        </div>\n        <div className=\"chat__body\">\n          <div className=\"chat__users\">\n            <Users users={users} />\n          </div>\n          <div className=\"chat__messages\">\n            <Messages\n              dark={dark}\n              name={name}\n              onSend={onSend}\n              message={message}\n              messages={messages}\n              setMessage={setMessage}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n","import { useState } from 'react';\n\nimport { Button, TextField } from '../../components';\nimport './styles.css';\n\nconst Join = ({ onJoin }: any) => {\n  const [name, setName] = useState<string>('');\n  const [room, setRoom] = useState<string>('');\n\n  return (\n    <div className=\"join__wrapper\">\n      <div className=\"join__container\">\n        <TextField\n          type=\"text\"\n          placeholder=\"Name\"\n          onChange={(value: string) => setName(value)}\n        />\n        <div style={{ height: '24px' }}></div>\n        <TextField\n          type=\"text\"\n          placeholder=\"Room\"\n          onChange={(value: string) => setRoom(value)}\n        />\n        <div style={{ height: '36px' }}></div>\n        <Button block onClick={() => onJoin && onJoin({ name, room })}>\n          JOIN\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Join;\n","export const lightCSSVariables = {\n  '--text-color-primary': 'rgba(0, 0, 0, 0.86)',\n  '--text-color-secondary': 'rgba(0, 0, 0, 0.7)',\n  '--text-color-disabled': 'rgba(0, 0, 0, 0.56)',\n  '--primary-bg': '#f3f6ff',\n  '--primary': '#2255be',\n  '--white': '#ffffff',\n  '--black': '#222222',\n};\n\nexport const darkCSSVariables = {\n  '--text-color-primary': 'rgba(255, 255, 255, 1)',\n  '--text-color-secondary': 'rgba(255, 255, 255, 0.8)',\n  '--text-color-disabled': 'rgba(255, 255, 255, 0.56)',\n  '--primary-bg': '#292929',\n  '--primary': '#2255be',\n  '--white': '#3d3d3d',\n  '--black': '#000000',\n};\n\nexport const setCSSVariable = (element: any, variable: any, value: any) => {\n  if (element && value) {\n    element.style.setProperty(variable, String(value));\n  }\n};\n\nexport const overrideThemeVariables = (themeObject: any) => {\n  const root = document.querySelector(':root');\n  const themeVariables = Object.keys(themeObject);\n\n  if (root && themeObject) {\n    themeVariables.forEach(themeVar => {\n      const varValue = themeObject[themeVar];\n      if (varValue && themeVar.startsWith('--')) {\n        setCSSVariable(root, themeVar, varValue);\n      }\n    });\n  }\n};\n","import { useLayoutEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\n\nimport { Join, Chat } from '../views';\nimport { Alert } from '../components';\nimport {\n  darkCSSVariables,\n  lightCSSVariables,\n  overrideThemeVariables,\n} from '../util';\n\nimport './styles.css';\n\nconst alert = require('../assets/alert.wav');\nconst audio = new Audio(alert.default);\n\nconst URL = 'https://spanion-chat.herokuapp.com';\nlet socket = io(URL, { transports: ['websocket'] });\n\nconst App = () => {\n  const [name, setName] = useState<string>('');\n  const [room, setRoom] = useState<string>('');\n  const [users, setUsers] = useState<any[]>([]);\n  const [message, setMessage] = useState<string>('');\n  const [messages, setMessages] = useState<string[]>([]);\n  const [dark, setDark] = useState<boolean>(false);\n  const [joined, setJoined] = useState<boolean>(false);\n  const [showAlert, setShowAlert] = useState<boolean>(false);\n  const [alertMessage, setAlertMessage] = useState<string>('');\n\n  useLayoutEffect(() => {\n    socket.on('message', message => {\n      if (message.user !== 'bot') {\n        audio.play();\n      }\n\n      setMessages(messages => [...messages, message]);\n    });\n\n    socket.on('roomData', ({ message, users }) => {\n      setUsers(users);\n\n      if (message) {\n        setAlertMessage(message);\n        setShowAlert(true);\n      }\n    });\n\n    socket.on('leave', ({ error, devMessage }) => {\n      console.error({ error, devMessage });\n\n      reset();\n    });\n\n    handleTheme(localStorage.getItem('dark') === 'true');\n  }, []);\n\n  const reset = () => {\n    setAlertMessage('');\n    setShowAlert(false);\n    setJoined(false);\n    setMessages([]);\n    setMessage('');\n    setUsers([]);\n    setName('');\n    setRoom('');\n  };\n\n  const handleTheme = (value: boolean) => {\n    localStorage.setItem('dark', String(value));\n\n    console.trace(value);\n\n    setDark(value);\n\n    overrideThemeVariables(value ? darkCSSVariables : lightCSSVariables);\n  };\n\n  const sendMessage = (event: MessageEvent) => {\n    if (event) {\n      event.preventDefault();\n    }\n\n    if (message) {\n      const timestamp = new Date().valueOf();\n\n      socket.emit('sendMessage', { message, timestamp }, () => setMessage(''));\n    }\n  };\n\n  const onJoin = ({ name, room }: any) => {\n    setName(name);\n    setRoom(room);\n\n    socket.emit('join', { name, room }, (error: any) => {\n      if (error) {\n        setAlertMessage(error);\n        setShowAlert(true);\n\n        return;\n      }\n\n      setJoined(true);\n    });\n  };\n\n  return (\n    <div className=\"app\">\n      <Alert\n        show={showAlert}\n        message={alertMessage}\n        onChange={(value: boolean) => setShowAlert(value)}\n      />\n      {joined ? (\n        <Chat\n          dark={dark}\n          name={name}\n          room={room}\n          users={users}\n          message={message}\n          messages={messages}\n          onSend={sendMessage}\n          onTheme={handleTheme}\n          setMessage={setMessage}\n        />\n      ) : (\n        <Join onJoin={onJoin} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}